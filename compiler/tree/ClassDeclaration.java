
package tc.compiler.tree;

import tc.compiler.Location;
import tc.compiler.tree.visit.TreeVisitor;
import tc.compiler.tree.type.*;
import tc.compiler.tree.Identifier;
import java.util.List;
import java.util.ArrayList;

/**
 * AST class declaration node.
 *
 */
public final class ClassDeclaration extends Node
{
  private Identifier className;
  private Identifier superClassName;
  private List<ClassBodyDeclaration> classBody;

  
  public ClassDeclaration(final Location loc, Identifier name, Identifier superName, List<ClassBodyDeclaration> cb)
  {
    super(loc);
    className = name;
    superClassName = superName;
    classBody = cb;
  }

  public String getClassName()
  {
    return className.getName();
  }

  public String getSuperClassName()
  {
    return superClassName.getName();
  }  

  public List<ClassBodyDeclaration> getClassBody()
  {
    return classBody;
  }

  /** Apply a visitor to the node.
   *
   *  @param visitor the visitor to apply.
   *
   *  @return the value generated by the visitor.
   */
  @Override public <T> T apply(TreeVisitor<T> visitor)
  {
    return visitor.visit(this);
  }
}

