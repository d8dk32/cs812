package tc.compiler.tree;

import tc.compiler.Location;
import tc.compiler.tree.visit.TreeVisitor;
import tc.compiler.tree.type.*;
import tc.compiler.tree.Identifier;
import java.util.List;

/**
 * AST expression statement node.
 *
 */
public final class ExpressionStatement extends Statement
{
    private Expression expr;

    /** Create expression statement tree node
     * @param loc location in source code
     * @param exp expression in this statement
     */
     public ExpressionStatement(final Location loc, final Expression exp)
     {
         super(loc);
         this.expr = exp;
     }


    /** gets expression in this statement
    * @return Expression
     */
    public Expression getExpression() 
    {
        return this.expr;
    }

    /** sets expression in this statement
    * @param exp the expression to set on this statement
     */
    public void setExpression(Expression exp) 
    {
        this.expr = exp;
    }

    /** Apply a visitor to the node.
    *
    *  @param visitor the visitor to apply.
    *
    *  @return the value generated by the visitor.
    */
    @Override public <T> T apply(TreeVisitor<T> visitor)
    {
        return visitor.visit(this);
    }
}